// pragma solidity ^0.8.0;

// import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

// contract TrusterExploit {

//     function receiveEther() external {
//         assert(msg.sender == 0x0000000000000000000000000000000000000000);
//     }

//     receive () external payable {}

//     // function withdraw(address _tokenaddress, uint256 _amount) external {
//     //     require(msg.sender == owner);
//     //     require(IERC20(_tokenaddress).transfer(msg.sender, _amount), "Transfer of tokens failed");
//     // }
// }
// Doesn't work, since the function reverts if it doesn't pass a require. transfer() did not get triggered untill the require() passed.